/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * src.java
 *
 * Created on Jun 13, 2010, 5:52:16 PM
 */

package encryptionplayfair;

/**
 *
 * @author user
 */
import java.awt.Dimension;
import java.awt.Toolkit;
public class src extends javax.swing.JFrame {

    /** Creates new form src */
    public src() {
        initComponents();
            centeredWindow();
    }
private void centeredWindow(){
        // Get the size of the screen
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        // Determine the new location of the window
        int w = getSize().width;
        int h = getSize().height;
        int x = (dim.width-w)/2;
        int y = (dim.height-h)/2;
        // Move the window
        setLocation(x, y);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea4 = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        text2 = new javax.swing.JTextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        text1 = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(51, 0, 102));

        jTextArea4.setBackground(new java.awt.Color(51, 0, 102));
        jTextArea4.setColumns(20);
        jTextArea4.setEditable(false);
        jTextArea4.setFont(new java.awt.Font("Monospaced", 1, 18)); // NOI18N
        jTextArea4.setForeground(new java.awt.Color(255, 255, 255));
        jTextArea4.setRows(5);
        jTextArea4.setText("     The following Three classes are \nthe source code to build this program\nyou may study the source code and make\nyour own project, you can copy these \nthree codes by pasting into your project, \ndont forget that these three classes are \nseparated:\n\n1.The Method : KP.java\n2.Tester     : TestKP.java\n3.Main\t     : Main.java\n\n        Thanks for using the program\n            Have Fun Play Fair");
        jScrollPane4.setViewportView(jTextArea4);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("3. Playfair Main Class : Main.java");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("2. Playfair Testing Class : TestKP.java");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("1. Playfair Methods Class: KP.java");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("The Source Codes");

        jTextArea2.setColumns(20);
        jTextArea2.setEditable(false);
        jTextArea2.setRows(5);
        jTextArea2.setText("public class Main {\n\n    public static void main(String[] args) {\n\n        String a=\"ko\";\n\n        System.out.println(a.substring(1,2));\n        \n        \n    }\n\n}\n");
        jScrollPane2.setViewportView(jTextArea2);

        text2.setColumns(20);
        text2.setEditable(false);
        text2.setRows(5);
        text2.setText("package kodeplayfair;\n\n\nimport javax.swing.JOptionPane;\n\npublic class TestKP {\n\n    public static void main(String[] args) {\n        KP KodePlayfair = new KP();\n        String key = KodePlayfair.KataKunci(JOptionPane.showInputDialog(\"Submit the key for the Matrix:\"));\n\n\n        System.out.println(\"Inputed key: \" + key);\n        //masukkan ke matrik\n        int matrik[][] = KodePlayfair.inputMatrik(key);\n\n        //show matrik\n        for (int i = 0; i < matrik.length; i++) {\n            for (int j = 0; j < matrik.length; j++) {\n                //System.out.print(matrik[i][j]+\" \");\n                System.out.print(KodePlayfair.ConvertToWord(matrik[i][j]) + \" \");\n            }\n            System.out.println(\"\");\n        }\n\n        System.out.println(\"\\n**************************************\");\n        String plaintText = JOptionPane.showInputDialog(\"Submit the Plaintext:\");\n        System.out.println(\"Plaintext : \"+plaintText);\n        //olah data inputan\n         System.out.println(\"**************************************\");\n        String text = KodePlayfair.olahInputan(plaintText);\n        System.out.println(\"Playfaired Plaintext :\" + text);\n\n        //enkrip\n        String b = KodePlayfair.chipperText(text, matrik);\n        System.out.println(\"Ciphertext Result    :\" + b);\n        System.out.println(\"**************************************\");\n        \n        //dekrip\n        String text1 = KodePlayfair.olahInputan(b);\n        System.out.println(\"The Ciphertext       :\" + text1);\n        String c = KodePlayfair.plaintText(text1, matrik);\n        System.out.println(\"Decrypted Ciphertext : \" + c);\n        System.out.println(\"**************************************\");\n\n           System.out.println(\"Have Fun ! Playfair!!\");\n\n    }\n}");
        jScrollPane3.setViewportView(text2);

        text1.setColumns(20);
        text1.setEditable(false);
        text1.setRows(5);
        text1.setText("package kodeplayfair;\n\n\npublic class KP {\n    public static void main(String[] args) {\n        \n            \n    }\n    public KP(){}\n\n    public String olahInputan(String a ){\n        String text=\"\";\n        //menghilangkan spasi\n            for(int i=0; i<a.length();i++){\n                String text1=(a.substring(i,i+1));\n                if(text1.equals(\" \")==false){\n                    text=text+text1;\n                }\n            }\n            //cek bagian data yang sama,jika ada ditambah huruf 'x'\n            int pjgKunci=text.length();\n            for(int i=0; i<pjgKunci; i=i+2){\n                if(i==text.length()-1){\n                    if(text.length()%2!=0){\n                        text=text+\"x\";\n                    }\n                }\n                String x1=text.substring(i,i+1);\n                String x2=text.substring(i+1,i+2);\n                if(x1.equalsIgnoreCase(x2)){\n                    text=text.substring(0,i+1)+\"x\"+text.substring(i+1,text.length());\n                    pjgKunci++;\n                }\n\n            }\n        return text;\n    }\n    public String plaintText(String chipperText,int matrik[][]){\n        String plaintText=\"\";\n        int aPost[]=new int[2];\n        int bPost[]=new int[2];\n        int length=0;\n\n        if(chipperText.length()%2!=0){\n            //int aa=(int)(Math.random()*25)+1;\n            length=chipperText.length()+1;\n            chipperText=chipperText+\"x\";\n        }else length=chipperText.length();\n\n            for(int i=0; i<length; i=i+2){\n                int a=ConvertToDecimal(chipperText.substring(i,i+1));\n                int b=ConvertToDecimal(chipperText.substring(i+1,i+2));\n                aPost=post(matrik,a);\n                bPost=post(matrik,b);\n\n                if(aPost[0]==bPost[0]){//horizontal\n                    int xA=aPost[1]-1;\n                    int xB=bPost[1]-1;\n                    if(xA==-1){\n                        xA=4;\n                    }\n                    if(xB==-1){\n                        xB=4;\n                    }\n                    plaintText=plaintText+\"\"+ConvertToWord(matrik[aPost[0]][xA]);\n                    plaintText=plaintText+\"\"+ConvertToWord(matrik[bPost[0]][xB]);\n                }else if(aPost[1]==bPost[1]){//vertikal\n                    int xA=aPost[0]-1;\n                    int xB=bPost[0]-1;\n                    if(xA==-1){\n                        xA=4;\n                    }\n                    if(xB==-1){\n                        xB=4;\n                    }\n                    plaintText=plaintText+\"\"+ConvertToWord(matrik[xA][aPost[1]]);\n                    plaintText=plaintText+\"\"+ConvertToWord(matrik[xB][bPost[1]]);\n                }else{\n                    plaintText=plaintText+\"\"+ConvertToWord(matrik[aPost[0]][bPost[1]]);\n                    plaintText=plaintText+\"\"+ConvertToWord(matrik[bPost[0]][aPost[1]]);\n                }\n\n            }\n        return plaintText;\n    }\n    public  String chipperText(String plaintText,int matrik[][]){\n        String chipperText=\"\";\n        int aPost[]=new int[2];\n        int bPost[]=new int[2];\n        int length=0;\n        if(plaintText.length()%2!=0){\n\n            //int aa=(int)(Math.random()*25)+1;\n            length=plaintText.length()+1;\n            plaintText=plaintText+\"x\";\n        }else length=plaintText.length();\n\n            for(int i=0; i<length; i=i+2){\n                int a=ConvertToDecimal(plaintText.substring(i,i+1));\n                int b=ConvertToDecimal(plaintText.substring(i+1,i+2));\n                aPost=post(matrik,a);\n                bPost=post(matrik,b);\n\n                if(aPost[0]==bPost[0]){\n                    int xA=aPost[1]+1;\n                    int xB=bPost[1]+1;\n                    if(xA==5){\n                        xA=0;\n                    }\n                    if(xB==5){\n                        xB=0;\n                    }\n                    chipperText=chipperText+\"\"+ConvertToWord(matrik[aPost[0]][xA]);\n                    chipperText=chipperText+\"\"+ConvertToWord(matrik[bPost[0]][xB]);\n                }else if(aPost[1]==bPost[1]){\n                    int xA=aPost[0]+1;\n                    int xB=bPost[0]+1;\n                    if(xA==5){\n                        xA=0;\n                    }\n                    if(xB==5){\n                        xB=0;\n                    }\n                    chipperText=chipperText+\"\"+ConvertToWord(matrik[xA][aPost[1]]);\n                    chipperText=chipperText+\"\"+ConvertToWord(matrik[xB][bPost[1]]);\n                }else{\n                    chipperText=chipperText+\"\"+ConvertToWord(matrik[aPost[0]][bPost[1]]);\n                    chipperText=chipperText+\"\"+ConvertToWord(matrik[bPost[0]][aPost[1]]);\n                }\n                \n            }\n        return chipperText;\n    }\n    public int[] post(int matrik[][], int a){\n\n        int x[]=new int[2];\n        for(int i=0; i<matrik.length; i++){\n            for(int j=0; j<matrik.length; j++){\n                if(a==matrik[i][j]){\n                    x[0]=i;\n                    x[1]=j;\n                    break;\n                }\n            }\n        }\n        return x;\n\n    }\n    public int[][] inputMatrik(String aLength){\n        int matrik[][]=new int[5][5];\n            int count=0;\n            int dAngka=1;\n            for(int i=0; i<matrik.length; i++){\n                for(int j=0; j<matrik.length; j++){\n                    if((count+1)!=aLength.length()+1){\n                        int angka=ConvertToDecimal(aLength.substring(count,(count+1)));\n                        matrik[i][j]=angka;\n                        count++;\n                    }else{\n\n                        for(int k=0; k<=i;k++){\n                            for(int l=0; l<matrik.length;l++){\n                                //System.out.println(dAngka+\" = \"+matrik[k][l]);\n                                if(dAngka==matrik[k][l]){\n                                    dAngka++;\n                                    k=0;l=-1;\n                                }\n                            }\n                        }\n                        matrik[i][j]=dAngka;\n                        dAngka++;\n                    }\n\n                }\n            }\n            return matrik;\n\n    }\n    public String KataKunci(String a){\n        String ktKunci=\"\";\n                        \n            String c[]=new String[a.length()];\n            boolean flag=false;\n            for(int i=0; i<a.length();i++){\n                String b=a.substring(i,(i+1));\n                for(int j=0; j<=i;j++){\n                    if(b.equalsIgnoreCase(c[j])){\n                        flag=true;\n                    }\n                }\n                if(flag==false){\n                    c[i]=b;\n                }\n                flag=false;\n                if(c[i]!=null){\n                ktKunci=ktKunci+c[i];\n                }\n                \n            }\n        return ktKunci;\n    }\n\n    public String ConvertToWord(int angka){\n        String huruf=\"\";\n            if(angka==1)huruf=\"a\";\n            else if(angka==2)huruf=\"b\";\n            else if(angka==3)huruf=\"c\";\n            else if(angka==4)huruf=\"d\";\n            else if(angka==5)huruf=\"e\";\n            else if(angka==6)huruf=\"f\";\n            else if(angka==7)huruf=\"g\";\n            else if(angka==8)huruf=\"h\";\n            else if(angka==9)huruf=\"i\";\n            else if(angka==10)huruf=\"k\";\n            else if(angka==11)huruf=\"l\";\n            else if(angka==12)huruf=\"m\";\n            else if(angka==13)huruf=\"n\";\n            else if(angka==14)huruf=\"o\";\n            else if(angka==15)huruf=\"p\";\n            else if(angka==16)huruf=\"q\";\n            else if(angka==17)huruf=\"r\";\n            else if(angka==18)huruf=\"s\";\n            else if(angka==19)huruf=\"t\";\n            else if(angka==20)huruf=\"u\";\n            else if(angka==21)huruf=\"v\";\n            else if(angka==22)huruf=\"w\";\n            else if(angka==23)huruf=\"x\";\n            else if(angka==24)huruf=\"y\";\n            else if(angka==25)huruf=\"z\";\n        return huruf;\n    }\n    public int ConvertToDecimal(String abjad){\n        int angka=0;\n            if(abjad.equalsIgnoreCase(\"a\"))angka=1;\n            else if(abjad.equalsIgnoreCase(\"b\"))angka=2;\n            else if(abjad.equalsIgnoreCase(\"c\"))angka=3;\n            else if(abjad.equalsIgnoreCase(\"d\"))angka=4;\n            else if(abjad.equalsIgnoreCase(\"e\"))angka=5;\n            else if(abjad.equalsIgnoreCase(\"f\"))angka=6;\n            else if(abjad.equalsIgnoreCase(\"g\"))angka=7;\n            else if(abjad.equalsIgnoreCase(\"h\"))angka=8;\n            else if(abjad.equalsIgnoreCase(\"i\") || (abjad.equalsIgnoreCase(\"j\")))angka=9;\n            else if(abjad.equalsIgnoreCase(\"k\"))angka=10;\n            else if(abjad.equalsIgnoreCase(\"l\"))angka=11;\n            else if(abjad.equalsIgnoreCase(\"m\"))angka=12;\n            else if(abjad.equalsIgnoreCase(\"n\"))angka=13;\n            else if(abjad.equalsIgnoreCase(\"o\"))angka=14;\n            else if(abjad.equalsIgnoreCase(\"p\"))angka=15;\n            else if(abjad.equalsIgnoreCase(\"q\"))angka=16;\n            else if(abjad.equalsIgnoreCase(\"r\"))angka=17;\n            else if(abjad.equalsIgnoreCase(\"s\"))angka=18;\n            else if(abjad.equalsIgnoreCase(\"t\"))angka=19;\n            else if(abjad.equalsIgnoreCase(\"u\"))angka=20;\n            else if(abjad.equalsIgnoreCase(\"v\"))angka=21;\n            else if(abjad.equalsIgnoreCase(\"w\"))angka=22;\n            else if(abjad.equalsIgnoreCase(\"x\"))angka=23;\n            else if(abjad.equalsIgnoreCase(\"y\"))angka=24;\n            else if(abjad.equalsIgnoreCase(\"z\"))angka=25;\n            \n        return angka;\n    }\n}");
        jScrollPane1.setViewportView(text1);

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton1.setText("Close ");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 377, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(40, 40, 40)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 490, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(509, 509, 509)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(91, 91, 91))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(313, 313, 313)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1)
                        .addGap(24, 24, 24)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(jLabel4)
                        .addGap(15, 15, 15)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane4))
                .addContainerGap(35, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.setVisible(false);
     
       
        // TODO add your handling code here:
}//GEN-LAST:event_jButton1ActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new src().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea jTextArea4;
    private javax.swing.JTextArea text1;
    private javax.swing.JTextArea text2;
    // End of variables declaration//GEN-END:variables

}
